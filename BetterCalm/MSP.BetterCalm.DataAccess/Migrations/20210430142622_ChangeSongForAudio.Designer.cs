// <auto-generated />
using System;
using MSP.BetterCalm.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MSP.BetterCalm.DataAccess.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20210430142622_ChangeSongForAudio")]
    partial class ChangeSongForAudio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.AdministratorDto", b =>
                {
                    b.Property<int>("AdministratorDtoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDtoId")
                        .HasColumnType("int");

                    b.HasKey("AdministratorDtoId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.AudioCategoryDto", b =>
                {
                    b.Property<int>("AudioID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("AudioID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("AudioCategoryDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.AudioDto", b =>
                {
                    b.Property<int>("AudioDtoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlAudio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AudioDtoID");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.CategoryDto", b =>
                {
                    b.Property<int>("CategoryDtoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryDtoID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.MeetingDto", b =>
                {
                    b.Property<int>("PsychologistId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PsychologistId", "PatientId", "DateTime");

                    b.HasIndex("PatientId");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PatientDto", b =>
                {
                    b.Property<int>("PatientDtoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDtoId")
                        .HasColumnType("int");

                    b.HasKey("PatientDtoId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PlaylistAudioDto", b =>
                {
                    b.Property<int>("PlaylistID")
                        .HasColumnType("int");

                    b.Property<int>("AudioID")
                        .HasColumnType("int");

                    b.HasKey("PlaylistID", "AudioID");

                    b.HasIndex("AudioID");

                    b.ToTable("PlaylistAudioDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PlaylistCategoryDto", b =>
                {
                    b.Property<int>("PlaylistID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("PlaylistID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("PlaylistCategoryDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PlaylistDto", b =>
                {
                    b.Property<int>("PlaylistDtoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlaylistDtoID");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.ProblematicDto", b =>
                {
                    b.Property<int>("ProblematicDtoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProblematicDtoID");

                    b.ToTable("Problematics");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PsychologistDto", b =>
                {
                    b.Property<int>("PsychologistDtoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDtoId")
                        .HasColumnType("int");

                    b.Property<bool>("WorksOnline")
                        .HasColumnType("bit");

                    b.HasKey("PsychologistDtoId");

                    b.ToTable("Psychologists");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PsychologistProblematicDto", b =>
                {
                    b.Property<int>("PsychologistId")
                        .HasColumnType("int");

                    b.Property<int>("ProblematicId")
                        .HasColumnType("int");

                    b.HasKey("PsychologistId", "ProblematicId");

                    b.HasIndex("ProblematicId");

                    b.ToTable("PsychologistProblematic");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.AudioCategoryDto", b =>
                {
                    b.HasOne("MSP.BetterCalm.DataAccess.AudioDto", "AudioDto")
                        .WithMany("AudiosCategoriesDto")
                        .HasForeignKey("AudioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSP.BetterCalm.DataAccess.CategoryDto", "CategoryDto")
                        .WithMany("AudiosCategoriesDto")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioDto");

                    b.Navigation("CategoryDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.MeetingDto", b =>
                {
                    b.HasOne("MSP.BetterCalm.DataAccess.PatientDto", "Patient")
                        .WithMany("Meetings")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSP.BetterCalm.DataAccess.PsychologistDto", "Psychologist")
                        .WithMany("Meetings")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PlaylistAudioDto", b =>
                {
                    b.HasOne("MSP.BetterCalm.DataAccess.AudioDto", "AudioDto")
                        .WithMany("PlaylistAudiosDto")
                        .HasForeignKey("AudioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSP.BetterCalm.DataAccess.PlaylistDto", "PlaylistDto")
                        .WithMany("PlaylistAudiosDto")
                        .HasForeignKey("PlaylistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioDto");

                    b.Navigation("PlaylistDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PlaylistCategoryDto", b =>
                {
                    b.HasOne("MSP.BetterCalm.DataAccess.CategoryDto", "CategoryDto")
                        .WithMany("PlaylistCategoriesDto")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSP.BetterCalm.DataAccess.PlaylistDto", "PlaylistDto")
                        .WithMany("PlaylistCategoriesDto")
                        .HasForeignKey("PlaylistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryDto");

                    b.Navigation("PlaylistDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PsychologistProblematicDto", b =>
                {
                    b.HasOne("MSP.BetterCalm.DataAccess.ProblematicDto", "Problematic")
                        .WithMany("PsychologistProblematic")
                        .HasForeignKey("ProblematicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSP.BetterCalm.DataAccess.PsychologistDto", "Psychologist")
                        .WithMany("Problematics")
                        .HasForeignKey("PsychologistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problematic");

                    b.Navigation("Psychologist");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.AudioDto", b =>
                {
                    b.Navigation("AudiosCategoriesDto");

                    b.Navigation("PlaylistAudiosDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.CategoryDto", b =>
                {
                    b.Navigation("AudiosCategoriesDto");

                    b.Navigation("PlaylistCategoriesDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PatientDto", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PlaylistDto", b =>
                {
                    b.Navigation("PlaylistAudiosDto");

                    b.Navigation("PlaylistCategoriesDto");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.ProblematicDto", b =>
                {
                    b.Navigation("PsychologistProblematic");
                });

            modelBuilder.Entity("MSP.BetterCalm.DataAccess.PsychologistDto", b =>
                {
                    b.Navigation("Meetings");

                    b.Navigation("Problematics");
                });
#pragma warning restore 612, 618
        }
    }
}
